name: Build Multi-Platform

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest # Or any suitable runner

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: darwin
            goarch: arm64 # Exclude if you don't need this combination

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 'stable' # Or your desired Go version

      - name: Get dependencies
        run: go mod tidy
        working-directory: . # If your go.mod is in the root

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -v -o my-app-${{ matrix.goos }}-${{ matrix.goarch }}$([ "$GOOS" == "windows" ] && echo ".exe" || echo "") .

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: my-app-${{ matrix.goos }}-${{ matrix.goarch }}
          path: my-app-${{ matrix.goos }}-${{ matrix.goarch }}${{ (matrix.goos == 'windows') && '.exe' || '' }}
